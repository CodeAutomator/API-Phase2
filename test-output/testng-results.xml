<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="80" passed="23" failed="57" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-27T15:30:11 EDT" name="Default suite" finished-at="2023-07-27T15:30:28 EDT" duration-ms="17418">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-07-27T15:30:11 EDT" name="Default test" finished-at="2023-07-27T15:30:28 EDT" duration-ms="17418">
      <class name="runnerfile.Testrunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:11 EDT" name="setUpClass" finished-at="2023-07-27T15:30:12 EDT" duration-ms="690" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2b08f55a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:12 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:15 EDT" duration-ms="2730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["GET student information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:15 EDT" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["POST student information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:15 EDT" duration-ms="43" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Get by programId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "Object.toString()" because the return value of "org.json.simple.JSONObject.get(Object)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "Object.toString()" because the return value of "org.json.simple.JSONObject.get(Object)" is null
at stepdefinitions.Positive_program_sd.we_send_with_program_id(Positive_program_sd.java:141)
at âœ½.we send with programId(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/01ProgramPositive.feature:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:15 EDT" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:15 EDT" duration-ms="20" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programName"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at stepdefinitions.Positive_program_sd.we_send_put_url_by_name(Positive_program_sd.java:340)
at âœ½.we send put url By Name(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/01ProgramPositive.feature:30)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:15 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["second POST student information"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Program student information"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="19" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:16 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Positive Scenarios of User Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:16 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:17 EDT" duration-ms="889" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to create an assignment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [400]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.AssignmentTests.verify_update_status(AssignmentTests.java:193)
at stepdefinitions.AssignmentPositiveScenarios_SD.user_receives_created_status_with_response_body(AssignmentPositiveScenarios_SD.java:73)
at âœ½.User receives created Status with response body(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/04AssignmentPositiveScenarios.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:17 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:18 EDT" duration-ms="1145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to extract all data of assignments"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:18 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:18 EDT" duration-ms="392" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to extract data by assignment id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.AssignmentTests.verify_get_status(AssignmentTests.java:151)
at stepdefinitions.AssignmentPositiveScenarios_SD.User_gets_data_by_assignment_id_in_response(AssignmentPositiveScenarios_SD.java:116)
at âœ½.User gets data by assignment id in response(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/04AssignmentPositiveScenarios.feature:21)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:18 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:18 EDT" duration-ms="250" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to extract data by batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.AssignmentTests.verify_get_status(AssignmentTests.java:151)
at stepdefinitions.AssignmentPositiveScenarios_SD.User_gets_data_by_batch_id_in_response(AssignmentPositiveScenarios_SD.java:125)
at âœ½.User gets data by batch id in response(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/04AssignmentPositiveScenarios.feature:27)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:18 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:19 EDT" duration-ms="284" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to update an assignment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.AssignmentTests.verify_update_status(AssignmentTests.java:193)
at stepdefinitions.AssignmentPositiveScenarios_SD.Assignment_gets_updated(AssignmentPositiveScenarios_SD.java:186)
at âœ½.Assignment gets updated(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/04AssignmentPositiveScenarios.feature:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:19 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:19 EDT" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:19 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:19 EDT" duration-ms="749" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get all data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (array) does not match any allowed primitive type (allowed: ["object"])
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/target/test-classes/assignmentsubschema.json#","pointer":"/definitions/Welcome6"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "array"
    expected: ["object"]

  Actual: [{"submissionId":1492,"assignmentId":3929,"userId":"U9349","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 17:15:11","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1493,"assignmentId":3932,"userId":"U9353","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 17:18:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1245,"assignmentId":3438,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 02:56:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1426,"assignmentId":3697,"userId":"U9016","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 02:25:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1430,"assignmentId":3742,"userId":"U9037","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-25-2023 03:14:54","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1156,"assignmentId":3298,"userId":"U8158","subDesc":"team2","subComments":"team_2 API pase2","subPathAttach1":"testing","subPathAttach2":"turtles","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-23-2023 19:38:47","gradedBy":"U7876","gradedDateTime":"07-25-2023 17:21:00","grade":2},{"submissionId":1304,"assignmentId":3515,"userId":"U7900","subDesc":"submission","subComments":"completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/home/guadeloupe_bluetooth.ra","subPathAttach3":"/proc/high_level_soft.dgc","subPathAttach4":"/Library/cotton_technologies.xdf","subPathAttach5":"/usr/obj/planner_e_markets_minnesota.fh5","subDateTime":"07-24-2023 19:13:36","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1132,"assignmentId":3259,"userId":"U7877","subDesc":"Subdescriptions","subComments":"commentall","subPathAttach1":"pathattachem","subPathAttach2":"subpathattach2","subPathAttach3":"subpath1","subPathAttach4":"at40","subPathAttach5":"you2attacth","subDateTime":"07-22-2023 22:47:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1305,"assignmentId":3515,"userId":"U8618","subDesc":"submission","subComments":"completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/opt/share/mayotte_collaborative.stk","subPathAttach3":"/opt/share/mayotte_collaborative.stk","subPathAttach4":"/opt/share/mayotte_collaborative.stk","subPathAttach5":"/opt/share/mayotte_collaborative.stk","subDateTime":"07-24-2023 20:17:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1306,"assignmentId":3336,"userId":"U8208","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 20:32:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1253,"assignmentId":3441,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 03:05:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1920,"assignmentId":4810,"userId":"U8352","subDesc":"Rest Assured Hackathon","subComments":null,"subDateTime":"07-27-2023 02:14:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1309,"assignmentId":3344,"userId":"U7900","subDesc":"submission","subComments":"completed","subPathAttach1":"/usr/lib/gorgeous.hjson","subPathAttach2":"/usr/libdata/generate_chips_alaska.opf","subPathAttach3":"/boot/executive_concrete.obj","subPathAttach4":"/Network/end_to_end_table.der","subPathAttach5":"/usr/local/src/borders_cheese.snf","subDateTime":"07-24-2023 21:10:15","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1921,"assignmentId":4810,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 02:19:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1311,"assignmentId":3542,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 22:25:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1499,"assignmentId":3948,"userId":"U9376","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:14:07","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:14:08","grade":2},{"submissionId":1816,"assignmentId":4564,"userId":"U10573","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:21:05","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:21:06","grade":2},{"submissionId":1821,"assignmentId":4574,"userId":"U10606","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:32:10","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:32:11","grade":2},{"submissionId":1440,"assignmentId":3754,"userId":"U9044","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:38:50","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1266,"assignmentId":3197,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 12:51:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1267,"assignmentId":3336,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 12:54:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1269,"assignmentId":3277,"userId":"U8292","subDesc":"test","subComments":"test","subPathAttach1":"tyest","subPathAttach2":"test","subPathAttach3":"hello","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 13:16:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1443,"assignmentId":3760,"userId":"U9048","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:48:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1268,"assignmentId":3490,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 13:15:49","gradedBy":"U7900","gradedDateTime":"07-24-2023 13:24:24","grade":2},{"submissionId":1270,"assignmentId":3277,"userId":"U8208","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 13:48:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1271,"assignmentId":3197,"userId":"U8208","subDesc":"test","subComments":"test","subPathAttach1":"tyest","subPathAttach2":"test","subPathAttach3":"hello","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 14:06:30","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1328,"assignmentId":3561,"userId":"U7877","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 22:56:13","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1445,"assignmentId":3765,"userId":"U9055","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:53:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1505,"assignmentId":3960,"userId":"U9403","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:43:01","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:43:02","grade":2},{"submissionId":1506,"assignmentId":3954,"userId":"U9385","subDesc":"desc","subComments":"selenium","subPathAttach1":"Filepath1","subDateTime":"07-25-2023 18:46:01","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1169,"assignmentId":3382,"userId":"U8208","subDesc":"","subComments":"submiting Assignment","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-23-2023 22:00:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1507,"assignmentId":3963,"userId":"U9413","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:53:02","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:53:03","grade":2},{"submissionId":1449,"assignmentId":3774,"userId":"U9063","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:59:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1450,"assignmentId":3780,"userId":"U9069","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 04:06:29","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1508,"assignmentId":3965,"userId":"U9416","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:56:23","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:56:24","grade":2},{"submissionId":1509,"assignmentId":3969,"userId":"U9424","subDesc":"Api Request","subComments":"Submitted","subDateTime":"07-25-2023 19:03:32","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1453,"assignmentId":3788,"userId":"U9075","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 04:10:15","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1827,"assignmentId":4583,"userId":"U10634","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:48:23","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:48:24","grade":2},{"submissionId":1207,"assignmentId":3412,"userId":"U7900","subDesc":"MyAssignment","subComments":"put update","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 00:45:33","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:50:36","grade":2},{"submissionId":1405,"assignmentId":3649,"userId":"U8941","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 00:59:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1294,"assignmentId":3515,"userId":"U8588","subDesc":"string","subComments":"string","subPathAttach1":"string","subPathAttach2":"string","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-24-2023 23:22:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1468,"assignmentId":3865,"userId":"U9217","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-25-2023 11:10:10","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1471,"assignmentId":3876,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 12:44:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1472,"assignmentId":3236,"userId":"U7822","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-25-2023 13:14:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1473,"assignmentId":3878,"userId":"U9238","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 13:18:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1510,"assignmentId":3972,"userId":"U9430","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 19:06:57","gradedBy":"U7900","gradedDateTime":"07-25-2023 19:06:57","grade":2},{"submissionId":1871,"assignmentId":4685,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-26-2023 21:01:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1565,"assignmentId":4069,"userId":"U9580","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 22:12:41","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1993,"assignmentId":4925,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:29:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1739,"assignmentId":4379,"userId":"U10235","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 14:20:28","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1523,"assignmentId":3990,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 19:51:57","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1524,"assignmentId":3997,"userId":"U9484","subDesc":"description1","subComments":"comment1","subPathAttach1":"path1","subPathAttach2":"subpath2","subPathAttach3":"sub1","subPathAttach4":"at1","subPathAttach5":"you2","subDateTime":"07-25-2023 19:55:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1525,"assignmentId":3998,"userId":"U9485","subDesc":"description2","subComments":"comment2","subPathAttach1":"path2","subPathAttach2":"subpath3","subPathAttach3":"sub2","subPathAttach4":"at2","subPathAttach5":"you3","subDateTime":"07-25-2023 19:55:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1526,"assignmentId":3999,"userId":"U9486","subDesc":"description3","subComments":"comment3","subPathAttach1":"path3","subPathAttach2":"subpath4","subPathAttach3":"sub3","subPathAttach4":"at3","subPathAttach5":"you4","subDateTime":"07-25-2023 19:56:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1639,"assignmentId":4161,"userId":"U9840","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 03:40:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1646,"assignmentId":4169,"userId":"U9866","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 03:52:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1651,"assignmentId":4179,"userId":"U9871","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:04:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1543,"assignmentId":4020,"userId":"U9509","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 20:37:06","gradedBy":"U7900","gradedDateTime":"07-25-2023 20:37:07","grade":2},{"submissionId":1544,"assignmentId":4029,"userId":"U9518","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 20:49:06","gradedBy":"U7900","gradedDateTime":"07-25-2023 20:49:07","grade":2},{"submissionId":1546,"assignmentId":4041,"userId":"U9531","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 21:01:01","gradedBy":"U7900","gradedDateTime":"07-25-2023 21:01:02","grade":2},{"submissionId":1655,"assignmentId":4183,"userId":"U9875","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:09:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1760,"assignmentId":4426,"userId":"U10298","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 15:14:48","gradedBy":"U10296","gradedDateTime":"07-26-2023 16:03:50","grade":1},{"submissionId":1662,"assignmentId":4202,"userId":"U9916","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:48:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1675,"assignmentId":4228,"userId":"U9959","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:13:17","gradedBy":"U7900","gradedDateTime":"07-26-2023 05:13:18","grade":2},{"submissionId":1676,"assignmentId":4229,"userId":"U9966","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:18:45","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1678,"assignmentId":3528,"userId":"U7876","subDesc":"test","subComments":"test123","subPathAttach1":"test1","subPathAttach2":"test2","subPathAttach3":"turtles","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-26-2023 05:29:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1679,"assignmentId":4240,"userId":"U9986","subDesc":"SDET SQL Assignment submission","subComments":null,"subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:43:49","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1680,"assignmentId":4241,"userId":"U9987","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:48:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1681,"assignmentId":4242,"userId":"U9993","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:55:10","gradedBy":"U7900","gradedDateTime":"07-26-2023 05:55:11","grade":2},{"submissionId":1682,"assignmentId":4243,"userId":"U9997","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:56:10","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1683,"assignmentId":4244,"userId":"U9999","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:58:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1684,"assignmentId":4245,"userId":"U10001","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:59:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1686,"assignmentId":4248,"userId":"U10004","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:59:59","gradedBy":"U7900","gradedDateTime":"07-26-2023 06:00:00","grade":2},{"submissionId":1687,"assignmentId":4250,"userId":"U10000","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 06:02:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1688,"assignmentId":4251,"userId":"U10006","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:03:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1689,"assignmentId":4253,"userId":"U10008","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:04:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1690,"assignmentId":4255,"userId":"U10010","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:06:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1691,"assignmentId":4257,"userId":"U10016","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:09:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1693,"assignmentId":4259,"userId":"U10020","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:11:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1694,"assignmentId":4261,"userId":"U10024","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:13:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1695,"assignmentId":4262,"userId":"U10025","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:14:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1696,"assignmentId":4264,"userId":"U10028","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:15:22","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1698,"assignmentId":4266,"userId":"U10034","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:19:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1703,"assignmentId":4268,"userId":"U10039","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:24:51","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1706,"assignmentId":4270,"userId":"U10041","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:27:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1707,"assignmentId":4272,"userId":"U10044","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:31:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1708,"assignmentId":4274,"userId":"U10050","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:33:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1709,"assignmentId":4276,"userId":"U10055","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:37:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1710,"assignmentId":4281,"userId":"U10080","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:46:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1711,"assignmentId":4282,"userId":"U10088","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:54:20","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1712,"assignmentId":4284,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-26-2023 07:02:30","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1713,"assignmentId":4287,"userId":"U10095","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 07:09:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1717,"assignmentId":4298,"userId":"U10112","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 07:22:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1953,"assignmentId":4880,"userId":"U11249","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:26:19","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:26:57","grade":2},{"submissionId":1559,"assignmentId":3915,"userId":"U8628","subDesc":"LMS Diabetes","subComments":"LMS Project Submission","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-25-2023 21:35:59","gradedBy":"U8608","gradedDateTime":"07-26-2023 11:55:33","grade":2},{"submissionId":1832,"assignmentId":4595,"userId":"U10648","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:58:04","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:58:05","grade":2},{"submissionId":1762,"assignmentId":4428,"userId":"U10300","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:20:47","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:20:48","grade":2},{"submissionId":1763,"assignmentId":4429,"userId":"U10301","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:22:40","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:22:41","grade":2},{"submissionId":2009,"assignmentId":4953,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:52:42","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2008,"assignmentId":3936,"userId":"U11383","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 04:52:12","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1766,"assignmentId":4432,"userId":"U10324","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:32:41","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:32:43","grade":2},{"submissionId":1768,"assignmentId":4434,"userId":"U10326","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:34:46","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:34:47","grade":2},{"submissionId":1872,"assignmentId":4699,"userId":"U8528","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-26-2023 21:38:16","gradedBy":"U8528","gradedDateTime":"07-27-2023 04:07:28","grade":1},{"submissionId":2041,"assignmentId":5036,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:15:20","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1926,"assignmentId":4819,"userId":"U11137","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 02:27:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2042,"assignmentId":5038,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:20:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2043,"assignmentId":3936,"userId":"U11543","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 07:25:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2226,"assignmentId":5340,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 19:14:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1908,"assignmentId":4782,"userId":"U11038","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 00:50:13","gradedBy":"U7900","gradedDateTime":"07-27-2023 00:50:14","grade":2},{"submissionId":1835,"assignmentId":4600,"userId":"U10654","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:03:59","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:04:00","grade":2},{"submissionId":1838,"assignmentId":4604,"userId":"U10662","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:11:07","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:11:08","grade":2},{"submissionId":1840,"assignmentId":4608,"userId":"U10667","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:19:21","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:19:22","grade":2},{"submissionId":2062,"assignmentId":5083,"userId":"U11590","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 13:49:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1844,"assignmentId":4614,"userId":"U10680","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:29:07","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1846,"assignmentId":4621,"userId":"U10694","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:35:21","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1911,"assignmentId":4787,"userId":"U11048","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 01:07:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1902,"assignmentId":3936,"userId":"U9350","subDesc":"Jul23-team6-SDET-Desc","subComments":"Jul23-team6-comment","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 00:28:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1903,"assignmentId":4764,"userId":"U11001","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-27-2023 00:32:05","gradedBy":"U10999","gradedDateTime":"07-27-2023 00:32:06","grade":1},{"submissionId":1854,"assignmentId":4631,"userId":"U10705","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:45:02","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1904,"assignmentId":4767,"userId":"U11011","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-27-2023 00:37:19","gradedBy":"U11009","gradedDateTime":"07-27-2023 00:37:20","grade":1},{"submissionId":1857,"assignmentId":4640,"userId":"U10714","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:56:43","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1862,"assignmentId":4650,"userId":"U10722","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 20:04:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1927,"assignmentId":4824,"userId":"U11146","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:29:40","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:29:41","grade":2},{"submissionId":1581,"assignmentId":4063,"userId":"U8618","subDesc":"submission","subComments":"re-submission completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/opt/share/mayotte_collaborative.stk","subPathAttach3":"/opt/share/mayotte_collaborative.stk","subPathAttach4":"/opt/share/mayotte_collaborative.stk","subPathAttach5":"/opt/share/mayotte_collaborative.stk","subDateTime":"07-25-2023 23:04:38","gradedBy":"U7900","gradedDateTime":"07-26-2023 20:39:46","grade":4},{"submissionId":1928,"assignmentId":4826,"userId":"U11154","subDesc":"Cucumber BDD Assignment","subComments":"Test Data","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-27-2023 02:32:03","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1925,"assignmentId":4818,"userId":"U11134","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 02:25:33","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1929,"assignmentId":4832,"userId":"U11167","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:41:54","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:41:55","grade":2},{"submissionId":1930,"assignmentId":4842,"userId":"U11185","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:51:59","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:52:02","grade":2},{"submissionId":1941,"assignmentId":4856,"userId":"U11199","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:03:11","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:03:55","grade":2},{"submissionId":2002,"assignmentId":3936,"userId":"U11373","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 04:46:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2160,"assignmentId":5257,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 17:33:32","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1947,"assignmentId":4867,"userId":"U11219","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:12:17","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:13:06","grade":2},{"submissionId":2118,"assignmentId":4390,"userId":"U8108","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 16:03:56","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2019,"assignmentId":3936,"userId":"U11421","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 05:23:54","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2090,"assignmentId":3936,"userId":"U11679","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 14:58:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2091,"assignmentId":3936,"userId":"U11680","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 15:00:01","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2034,"assignmentId":5013,"userId":"U11506","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 06:29:57","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2044,"assignmentId":3936,"userId":"U11547","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 07:34:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2095,"assignmentId":5145,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:02:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2096,"assignmentId":3936,"userId":"U11691","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 15:03:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2100,"assignmentId":5153,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:10:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2101,"assignmentId":5154,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:11:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2123,"assignmentId":5199,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:16:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2168,"assignmentId":5266,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 17:53:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2127,"assignmentId":4164,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:31:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2130,"assignmentId":3701,"userId":"U8158","subDesc":"team2_testingturtles","subComments":"team_2_Phasee","subPathAttach1":"testing","subPathAttach2":"turtles","subPathAttach3":"team2","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-27-2023 16:41:49","gradedBy":"U7876","gradedDateTime":"07-27-2023 17:14:10","grade":2},{"submissionId":2155,"assignmentId":5249,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:23:42","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1950,"assignmentId":4872,"userId":"U11206","subDesc":"E2EAssignment","subComments":"E2EAssignment","subPathAttach1":"Path1","subPathAttach2":"Path2","subPathAttach3":"Path3","subPathAttach4":"Path4","subPathAttach5":"Path5","subDateTime":"07-27-2023 03:20:15","gradedBy":"U11204","gradedDateTime":"07-27-2023 03:32:05","grade":2},{"submissionId":2128,"assignmentId":5212,"userId":"U8989","subDesc":"RestlessCoders","subComments":"RestAPI","subPathAttach1":"https://drive.google.com/drive/folders/1V7U_sSlJeWUuX-rxCOO0s3kkmfnQ-gvt","subPathAttach2":"string","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-27-2023 16:37:21","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2129,"assignmentId":5213,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:37:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2131,"assignmentId":5216,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:48:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1982,"assignmentId":4911,"userId":"U11333","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 04:12:57","gradedBy":"U7900","gradedDateTime":"07-27-2023 04:13:47","grade":2},{"submissionId":2079,"assignmentId":5120,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-27-2023 14:30:03","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1985,"assignmentId":4914,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:15:44","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1528,"assignmentId":4001,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentallf","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 19:59:19","gradedBy":"U7877","gradedDateTime":"07-27-2023 14:30:06","grade":1},{"submissionId":2081,"assignmentId":5123,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:37:36","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2082,"assignmentId":5126,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:40:56","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2035,"assignmentId":3936,"userId":"U11517","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 06:42:25","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2037,"assignmentId":5028,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 06:53:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2038,"assignmentId":5030,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 06:56:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2039,"assignmentId":5032,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:01:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2040,"assignmentId":5034,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:02:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2086,"assignmentId":3936,"userId":"U11672","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 14:44:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2088,"assignmentId":5137,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:56:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2104,"assignmentId":5160,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:18:11","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2060,"assignmentId":5081,"userId":"U11587","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 13:45:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2107,"assignmentId":5169,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:31:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2109,"assignmentId":5175,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:35:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2110,"assignmentId":5177,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:39:48","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2122,"assignmentId":5197,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:14:18","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2124,"assignmentId":5201,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:19:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2126,"assignmentId":5208,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:27:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2156,"assignmentId":5250,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:25:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2158,"assignmentId":5253,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:29:31","gradedBy":null,"gradedDateTime":null,"grade":-1}]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Response body doesn't match expectation.
Expected: The content to match the given JSON schema.
error: instance type (array) does not match any allowed primitive type (allowed: ["object"])
    level: "error"
    schema: {"loadingURI":"file:/C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/target/test-classes/assignmentsubschema.json#","pointer":"/definitions/Welcome6"}
    instance: {"pointer":""}
    domain: "validation"
    keyword: "type"
    found: "array"
    expected: ["object"]

  Actual: [{"submissionId":1492,"assignmentId":3929,"userId":"U9349","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 17:15:11","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1493,"assignmentId":3932,"userId":"U9353","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 17:18:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1245,"assignmentId":3438,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 02:56:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1426,"assignmentId":3697,"userId":"U9016","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 02:25:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1430,"assignmentId":3742,"userId":"U9037","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-25-2023 03:14:54","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1156,"assignmentId":3298,"userId":"U8158","subDesc":"team2","subComments":"team_2 API pase2","subPathAttach1":"testing","subPathAttach2":"turtles","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-23-2023 19:38:47","gradedBy":"U7876","gradedDateTime":"07-25-2023 17:21:00","grade":2},{"submissionId":1304,"assignmentId":3515,"userId":"U7900","subDesc":"submission","subComments":"completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/home/guadeloupe_bluetooth.ra","subPathAttach3":"/proc/high_level_soft.dgc","subPathAttach4":"/Library/cotton_technologies.xdf","subPathAttach5":"/usr/obj/planner_e_markets_minnesota.fh5","subDateTime":"07-24-2023 19:13:36","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1132,"assignmentId":3259,"userId":"U7877","subDesc":"Subdescriptions","subComments":"commentall","subPathAttach1":"pathattachem","subPathAttach2":"subpathattach2","subPathAttach3":"subpath1","subPathAttach4":"at40","subPathAttach5":"you2attacth","subDateTime":"07-22-2023 22:47:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1305,"assignmentId":3515,"userId":"U8618","subDesc":"submission","subComments":"completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/opt/share/mayotte_collaborative.stk","subPathAttach3":"/opt/share/mayotte_collaborative.stk","subPathAttach4":"/opt/share/mayotte_collaborative.stk","subPathAttach5":"/opt/share/mayotte_collaborative.stk","subDateTime":"07-24-2023 20:17:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1306,"assignmentId":3336,"userId":"U8208","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 20:32:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1253,"assignmentId":3441,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 03:05:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1920,"assignmentId":4810,"userId":"U8352","subDesc":"Rest Assured Hackathon","subComments":null,"subDateTime":"07-27-2023 02:14:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1309,"assignmentId":3344,"userId":"U7900","subDesc":"submission","subComments":"completed","subPathAttach1":"/usr/lib/gorgeous.hjson","subPathAttach2":"/usr/libdata/generate_chips_alaska.opf","subPathAttach3":"/boot/executive_concrete.obj","subPathAttach4":"/Network/end_to_end_table.der","subPathAttach5":"/usr/local/src/borders_cheese.snf","subDateTime":"07-24-2023 21:10:15","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1921,"assignmentId":4810,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 02:19:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1311,"assignmentId":3542,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 22:25:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1499,"assignmentId":3948,"userId":"U9376","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:14:07","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:14:08","grade":2},{"submissionId":1816,"assignmentId":4564,"userId":"U10573","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:21:05","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:21:06","grade":2},{"submissionId":1821,"assignmentId":4574,"userId":"U10606","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:32:10","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:32:11","grade":2},{"submissionId":1440,"assignmentId":3754,"userId":"U9044","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:38:50","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1266,"assignmentId":3197,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 12:51:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1267,"assignmentId":3336,"userId":"U8292","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 12:54:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1269,"assignmentId":3277,"userId":"U8292","subDesc":"test","subComments":"test","subPathAttach1":"tyest","subPathAttach2":"test","subPathAttach3":"hello","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 13:16:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1443,"assignmentId":3760,"userId":"U9048","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:48:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1268,"assignmentId":3490,"userId":"U7900","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 13:15:49","gradedBy":"U7900","gradedDateTime":"07-24-2023 13:24:24","grade":2},{"submissionId":1270,"assignmentId":3277,"userId":"U8208","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 13:48:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1271,"assignmentId":3197,"userId":"U8208","subDesc":"test","subComments":"test","subPathAttach1":"tyest","subPathAttach2":"test","subPathAttach3":"hello","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 14:06:30","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1328,"assignmentId":3561,"userId":"U7877","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-24-2023 22:56:13","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1445,"assignmentId":3765,"userId":"U9055","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:53:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1505,"assignmentId":3960,"userId":"U9403","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:43:01","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:43:02","grade":2},{"submissionId":1506,"assignmentId":3954,"userId":"U9385","subDesc":"desc","subComments":"selenium","subPathAttach1":"Filepath1","subDateTime":"07-25-2023 18:46:01","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1169,"assignmentId":3382,"userId":"U8208","subDesc":"","subComments":"submiting Assignment","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-23-2023 22:00:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1507,"assignmentId":3963,"userId":"U9413","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:53:02","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:53:03","grade":2},{"submissionId":1449,"assignmentId":3774,"userId":"U9063","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 03:59:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1450,"assignmentId":3780,"userId":"U9069","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 04:06:29","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1508,"assignmentId":3965,"userId":"U9416","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 18:56:23","gradedBy":"U7900","gradedDateTime":"07-25-2023 18:56:24","grade":2},{"submissionId":1509,"assignmentId":3969,"userId":"U9424","subDesc":"Api Request","subComments":"Submitted","subDateTime":"07-25-2023 19:03:32","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1453,"assignmentId":3788,"userId":"U9075","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 04:10:15","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1827,"assignmentId":4583,"userId":"U10634","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:48:23","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:48:24","grade":2},{"submissionId":1207,"assignmentId":3412,"userId":"U7900","subDesc":"MyAssignment","subComments":"put update","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-24-2023 00:45:33","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:50:36","grade":2},{"submissionId":1405,"assignmentId":3649,"userId":"U8941","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 00:59:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1294,"assignmentId":3515,"userId":"U8588","subDesc":"string","subComments":"string","subPathAttach1":"string","subPathAttach2":"string","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-24-2023 23:22:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1468,"assignmentId":3865,"userId":"U9217","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-25-2023 11:10:10","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1471,"assignmentId":3876,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 12:44:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1472,"assignmentId":3236,"userId":"U7822","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-25-2023 13:14:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1473,"assignmentId":3878,"userId":"U9238","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 13:18:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1510,"assignmentId":3972,"userId":"U9430","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 19:06:57","gradedBy":"U7900","gradedDateTime":"07-25-2023 19:06:57","grade":2},{"submissionId":1871,"assignmentId":4685,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-26-2023 21:01:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1565,"assignmentId":4069,"userId":"U9580","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 22:12:41","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1993,"assignmentId":4925,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:29:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1739,"assignmentId":4379,"userId":"U10235","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 14:20:28","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1523,"assignmentId":3990,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 19:51:57","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1524,"assignmentId":3997,"userId":"U9484","subDesc":"description1","subComments":"comment1","subPathAttach1":"path1","subPathAttach2":"subpath2","subPathAttach3":"sub1","subPathAttach4":"at1","subPathAttach5":"you2","subDateTime":"07-25-2023 19:55:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1525,"assignmentId":3998,"userId":"U9485","subDesc":"description2","subComments":"comment2","subPathAttach1":"path2","subPathAttach2":"subpath3","subPathAttach3":"sub2","subPathAttach4":"at2","subPathAttach5":"you3","subDateTime":"07-25-2023 19:55:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1526,"assignmentId":3999,"userId":"U9486","subDesc":"description3","subComments":"comment3","subPathAttach1":"path3","subPathAttach2":"subpath4","subPathAttach3":"sub3","subPathAttach4":"at3","subPathAttach5":"you4","subDateTime":"07-25-2023 19:56:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1639,"assignmentId":4161,"userId":"U9840","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 03:40:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1646,"assignmentId":4169,"userId":"U9866","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 03:52:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1651,"assignmentId":4179,"userId":"U9871","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:04:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1543,"assignmentId":4020,"userId":"U9509","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 20:37:06","gradedBy":"U7900","gradedDateTime":"07-25-2023 20:37:07","grade":2},{"submissionId":1544,"assignmentId":4029,"userId":"U9518","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 20:49:06","gradedBy":"U7900","gradedDateTime":"07-25-2023 20:49:07","grade":2},{"submissionId":1546,"assignmentId":4041,"userId":"U9531","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-25-2023 21:01:01","gradedBy":"U7900","gradedDateTime":"07-25-2023 21:01:02","grade":2},{"submissionId":1655,"assignmentId":4183,"userId":"U9875","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:09:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1760,"assignmentId":4426,"userId":"U10298","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 15:14:48","gradedBy":"U10296","gradedDateTime":"07-26-2023 16:03:50","grade":1},{"submissionId":1662,"assignmentId":4202,"userId":"U9916","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 04:48:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1675,"assignmentId":4228,"userId":"U9959","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:13:17","gradedBy":"U7900","gradedDateTime":"07-26-2023 05:13:18","grade":2},{"submissionId":1676,"assignmentId":4229,"userId":"U9966","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:18:45","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1678,"assignmentId":3528,"userId":"U7876","subDesc":"test","subComments":"test123","subPathAttach1":"test1","subPathAttach2":"test2","subPathAttach3":"turtles","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-26-2023 05:29:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1679,"assignmentId":4240,"userId":"U9986","subDesc":"SDET SQL Assignment submission","subComments":null,"subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:43:49","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1680,"assignmentId":4241,"userId":"U9987","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:48:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1681,"assignmentId":4242,"userId":"U9993","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:55:10","gradedBy":"U7900","gradedDateTime":"07-26-2023 05:55:11","grade":2},{"submissionId":1682,"assignmentId":4243,"userId":"U9997","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:56:10","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1683,"assignmentId":4244,"userId":"U9999","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:58:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1684,"assignmentId":4245,"userId":"U10001","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 05:59:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1686,"assignmentId":4248,"userId":"U10004","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 05:59:59","gradedBy":"U7900","gradedDateTime":"07-26-2023 06:00:00","grade":2},{"submissionId":1687,"assignmentId":4250,"userId":"U10000","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 06:02:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1688,"assignmentId":4251,"userId":"U10006","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:03:59","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1689,"assignmentId":4253,"userId":"U10008","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:04:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1690,"assignmentId":4255,"userId":"U10010","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:06:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1691,"assignmentId":4257,"userId":"U10016","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:09:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1693,"assignmentId":4259,"userId":"U10020","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:11:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1694,"assignmentId":4261,"userId":"U10024","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:13:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1695,"assignmentId":4262,"userId":"U10025","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:14:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1696,"assignmentId":4264,"userId":"U10028","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:15:22","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1698,"assignmentId":4266,"userId":"U10034","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:19:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1703,"assignmentId":4268,"userId":"U10039","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:24:51","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1706,"assignmentId":4270,"userId":"U10041","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:27:27","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1707,"assignmentId":4272,"userId":"U10044","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:31:53","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1708,"assignmentId":4274,"userId":"U10050","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:33:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1709,"assignmentId":4276,"userId":"U10055","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:37:26","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1710,"assignmentId":4281,"userId":"U10080","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 06:46:58","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1711,"assignmentId":4282,"userId":"U10088","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-26-2023 06:54:20","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1712,"assignmentId":4284,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-26-2023 07:02:30","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1713,"assignmentId":4287,"userId":"U10095","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 07:09:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1717,"assignmentId":4298,"userId":"U10112","subDesc":"Assignment submitted","subComments":"completed","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-26-2023 07:22:47","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1953,"assignmentId":4880,"userId":"U11249","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:26:19","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:26:57","grade":2},{"submissionId":1559,"assignmentId":3915,"userId":"U8628","subDesc":"LMS Diabetes","subComments":"LMS Project Submission","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-25-2023 21:35:59","gradedBy":"U8608","gradedDateTime":"07-26-2023 11:55:33","grade":2},{"submissionId":1832,"assignmentId":4595,"userId":"U10648","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 18:58:04","gradedBy":"U7900","gradedDateTime":"07-26-2023 18:58:05","grade":2},{"submissionId":1762,"assignmentId":4428,"userId":"U10300","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:20:47","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:20:48","grade":2},{"submissionId":1763,"assignmentId":4429,"userId":"U10301","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:22:40","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:22:41","grade":2},{"submissionId":2009,"assignmentId":4953,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:52:42","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2008,"assignmentId":3936,"userId":"U11383","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 04:52:12","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1766,"assignmentId":4432,"userId":"U10324","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:32:41","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:32:43","grade":2},{"submissionId":1768,"assignmentId":4434,"userId":"U10326","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 15:34:46","gradedBy":"U7900","gradedDateTime":"07-26-2023 15:34:47","grade":2},{"submissionId":1872,"assignmentId":4699,"userId":"U8528","subDesc":"Test1","subComments":"test1","subPathAttach1":"test","subPathAttach2":"test","subPathAttach3":"test","subPathAttach4":"test","subPathAttach5":"test","subDateTime":"07-26-2023 21:38:16","gradedBy":"U8528","gradedDateTime":"07-27-2023 04:07:28","grade":1},{"submissionId":2041,"assignmentId":5036,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:15:20","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1926,"assignmentId":4819,"userId":"U11137","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 02:27:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2042,"assignmentId":5038,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:20:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2043,"assignmentId":3936,"userId":"U11543","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 07:25:17","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2226,"assignmentId":5340,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 19:14:34","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1908,"assignmentId":4782,"userId":"U11038","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 00:50:13","gradedBy":"U7900","gradedDateTime":"07-27-2023 00:50:14","grade":2},{"submissionId":1835,"assignmentId":4600,"userId":"U10654","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:03:59","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:04:00","grade":2},{"submissionId":1838,"assignmentId":4604,"userId":"U10662","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:11:07","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:11:08","grade":2},{"submissionId":1840,"assignmentId":4608,"userId":"U10667","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-26-2023 19:19:21","gradedBy":"U7900","gradedDateTime":"07-26-2023 19:19:22","grade":2},{"submissionId":2062,"assignmentId":5083,"userId":"U11590","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 13:49:08","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1844,"assignmentId":4614,"userId":"U10680","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:29:07","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1846,"assignmentId":4621,"userId":"U10694","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:35:21","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1911,"assignmentId":4787,"userId":"U11048","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 01:07:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1902,"assignmentId":3936,"userId":"U9350","subDesc":"Jul23-team6-SDET-Desc","subComments":"Jul23-team6-comment","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 00:28:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1903,"assignmentId":4764,"userId":"U11001","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-27-2023 00:32:05","gradedBy":"U10999","gradedDateTime":"07-27-2023 00:32:06","grade":1},{"submissionId":1854,"assignmentId":4631,"userId":"U10705","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:45:02","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1904,"assignmentId":4767,"userId":"U11011","subDesc":"Api Request","subComments":"Done","subPathAttach1":"Filepath1","subDateTime":"07-27-2023 00:37:19","gradedBy":"U11009","gradedDateTime":"07-27-2023 00:37:20","grade":1},{"submissionId":1857,"assignmentId":4640,"userId":"U10714","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 19:56:43","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1862,"assignmentId":4650,"userId":"U10722","subDesc":"Api Request","subComments":"Submitted","subPathAttach1":"Filepath1","subDateTime":"07-26-2023 20:04:19","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1927,"assignmentId":4824,"userId":"U11146","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:29:40","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:29:41","grade":2},{"submissionId":1581,"assignmentId":4063,"userId":"U8618","subDesc":"submission","subComments":"re-submission completed","subPathAttach1":"/opt/share/mayotte_collaborative.stk","subPathAttach2":"/opt/share/mayotte_collaborative.stk","subPathAttach3":"/opt/share/mayotte_collaborative.stk","subPathAttach4":"/opt/share/mayotte_collaborative.stk","subPathAttach5":"/opt/share/mayotte_collaborative.stk","subDateTime":"07-25-2023 23:04:38","gradedBy":"U7900","gradedDateTime":"07-26-2023 20:39:46","grade":4},{"submissionId":1928,"assignmentId":4826,"userId":"U11154","subDesc":"Cucumber BDD Assignment","subComments":"Test Data","subPathAttach1":"file1.json","subPathAttach2":"file2.json","subPathAttach3":"file3.json","subPathAttach4":"file4.json","subPathAttach5":"file5.json","subDateTime":"07-27-2023 02:32:03","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1925,"assignmentId":4818,"userId":"U11134","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 02:25:33","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1929,"assignmentId":4832,"userId":"U11167","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:41:54","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:41:55","grade":2},{"submissionId":1930,"assignmentId":4842,"userId":"U11185","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 02:51:59","gradedBy":"U7900","gradedDateTime":"07-27-2023 02:52:02","grade":2},{"submissionId":1941,"assignmentId":4856,"userId":"U11199","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:03:11","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:03:55","grade":2},{"submissionId":2002,"assignmentId":3936,"userId":"U11373","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 04:46:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2160,"assignmentId":5257,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 17:33:32","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1947,"assignmentId":4867,"userId":"U11219","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 03:12:17","gradedBy":"U7900","gradedDateTime":"07-27-2023 03:13:06","grade":2},{"submissionId":2118,"assignmentId":4390,"userId":"U8108","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 16:03:56","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2019,"assignmentId":3936,"userId":"U11421","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 05:23:54","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2090,"assignmentId":3936,"userId":"U11679","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 14:58:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2091,"assignmentId":3936,"userId":"U11680","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 15:00:01","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2034,"assignmentId":5013,"userId":"U11506","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 06:29:57","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2044,"assignmentId":3936,"userId":"U11547","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 07:34:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2095,"assignmentId":5145,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:02:38","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2096,"assignmentId":3936,"userId":"U11691","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 15:03:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2100,"assignmentId":5153,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:10:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2101,"assignmentId":5154,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:11:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2123,"assignmentId":5199,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:16:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2168,"assignmentId":5266,"userId":"U11899","subDesc":"cool assignment","subComments":"very good","subPathAttach1":"path1","subPathAttach2":"path2","subPathAttach3":"path3","subPathAttach4":"path4","subPathAttach5":"path5","subDateTime":"07-27-2023 17:53:05","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2127,"assignmentId":4164,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:31:00","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2130,"assignmentId":3701,"userId":"U8158","subDesc":"team2_testingturtles","subComments":"team_2_Phasee","subPathAttach1":"testing","subPathAttach2":"turtles","subPathAttach3":"team2","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-27-2023 16:41:49","gradedBy":"U7876","gradedDateTime":"07-27-2023 17:14:10","grade":2},{"submissionId":2155,"assignmentId":5249,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:23:42","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1950,"assignmentId":4872,"userId":"U11206","subDesc":"E2EAssignment","subComments":"E2EAssignment","subPathAttach1":"Path1","subPathAttach2":"Path2","subPathAttach3":"Path3","subPathAttach4":"Path4","subPathAttach5":"Path5","subDateTime":"07-27-2023 03:20:15","gradedBy":"U11204","gradedDateTime":"07-27-2023 03:32:05","grade":2},{"submissionId":2128,"assignmentId":5212,"userId":"U8989","subDesc":"RestlessCoders","subComments":"RestAPI","subPathAttach1":"https://drive.google.com/drive/folders/1V7U_sSlJeWUuX-rxCOO0s3kkmfnQ-gvt","subPathAttach2":"string","subPathAttach3":"string","subPathAttach4":"string","subPathAttach5":"string","subDateTime":"07-27-2023 16:37:21","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2129,"assignmentId":5213,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:37:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2131,"assignmentId":5216,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:48:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1982,"assignmentId":4911,"userId":"U11333","subDesc":"MyAssignment","subComments":"Completed","subPathAttach1":"Test1","subPathAttach2":"Test2","subPathAttach3":"Test3","subPathAttach4":"Test4","subPathAttach5":"Test5","subDateTime":"07-27-2023 04:12:57","gradedBy":"U7900","gradedDateTime":"07-27-2023 04:13:47","grade":2},{"submissionId":2079,"assignmentId":5120,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentsforsubs","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-27-2023 14:30:03","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1985,"assignmentId":4914,"userId":"U9507","subDesc":"harjasspari","subComments":"trythis","subPathAttach1":"string12","subPathAttach2":"string34","subPathAttach3":"String22","subPathAttach4":"string44","subPathAttach5":"string66","subDateTime":"07-27-2023 04:15:44","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":1528,"assignmentId":4001,"userId":"U7877","subDesc":"subDescriptions","subComments":"commentallf","subPathAttach1":"pathatt12","subPathAttach2":"pathatt23","subPathAttach3":"pathatt34","subPathAttach4":"pathatt45","subPathAttach5":"pathatt56","subDateTime":"07-25-2023 19:59:19","gradedBy":"U7877","gradedDateTime":"07-27-2023 14:30:06","grade":1},{"submissionId":2081,"assignmentId":5123,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:37:36","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2082,"assignmentId":5126,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:40:56","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2035,"assignmentId":3936,"userId":"U11517","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 06:42:25","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2037,"assignmentId":5028,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 06:53:24","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2038,"assignmentId":5030,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 06:56:31","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2039,"assignmentId":5032,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:01:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2040,"assignmentId":5034,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 07:02:23","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2086,"assignmentId":3936,"userId":"U11672","subDesc":"Jul23-team6-SDET-Description.","subComments":"Jul23-team6-SDET-comment.","subPathAttach1":"Filepath1","subPathAttach2":"Filepath1","subPathAttach3":"Filepath1","subPathAttach4":"Filepath1","subPathAttach5":"Filepath1","subDateTime":"07-27-2023 14:44:14","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2088,"assignmentId":5137,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 14:56:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2104,"assignmentId":5160,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:18:11","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2060,"assignmentId":5081,"userId":"U11587","subDesc":"SDET SQL Assignment submission","subComments":"Testing for Assignment Submit","subPathAttach1":"pathfile1.json","subPathAttach2":"pathfile2.json","subPathAttach3":"pathfile3.json","subPathAttach4":"pathfile4.json","subPathAttach5":"pathfile5.json","subDateTime":"07-27-2023 13:45:52","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2107,"assignmentId":5169,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:31:06","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2109,"assignmentId":5175,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:35:46","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2110,"assignmentId":5177,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 15:39:48","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2122,"assignmentId":5197,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:14:18","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2124,"assignmentId":5201,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:19:09","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2126,"assignmentId":5208,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 16:27:37","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2156,"assignmentId":5250,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:25:39","gradedBy":null,"gradedDateTime":null,"grade":-1},{"submissionId":2158,"assignmentId":5253,"userId":"U8335","subDesc":"submission for Hackathon","subComments":null,"subDateTime":"07-27-2023 17:29:31","gradedBy":null,"gradedDateTime":null,"grade":-1}]

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:107)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at api.endpoints.AssignSubEndPoints.getAllAssignments(AssignSubEndPoints.java:33)
at api.test.DDtestcase.TestGetAllSub(DDtestcase.java:228)
at stepdefinitions.Post_subassignment.user_sends_get_request(Post_subassignment.java:98)
at âœ½.: User sends get request(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:19)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:19 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:20 EDT" duration-ms="409" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get by id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:264)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:25)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:20 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:20 EDT" duration-ms="439" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["update assginment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:264)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:34)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:20 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:20 EDT" duration-ms="11" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get grades"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at api.endpoints.AssignSubEndPoints.getGradesbyuserid(AssignSubEndPoints.java:41)
at api.test.DDtestcase.TestgetgradesbyuserID(DDtestcase.java:243)
at stepdefinitions.Post_subassignment.grade_is_retrieved_using_by_get_request(Post_subassignment.java:116)
at âœ½.: grade is retrieved using "U0" by get request(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:44)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:20 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:21 EDT" duration-ms="211" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get grades by batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:264)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:55)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:21 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:21 EDT" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get submission by userid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at api.endpoints.AssignSubEndPoints.getGradesbysubUserid(AssignSubEndPoints.java:109)
at api.test.DDtestcase.TestgetgradesbysubUserID(DDtestcase.java:249)
at stepdefinitions.Post_subassignment.get_submission_by_using_user_request(Post_subassignment.java:129)
at âœ½.:  get submission by using user "0" request(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:64)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:21 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:21 EDT" duration-ms="412" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get submission by batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Connection=keep-alive] but found [Connection=keep-alive]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Connection=keep-alive] but found [Connection=keep-alive]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:617)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:274)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:21 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:21 EDT" duration-ms="369" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["resubmit assignment with update request"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:264)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/05postsubassignment.feature:85)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:21 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="370" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["delete request for deleting the id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.verify_get_status(DDtestcase.java:264)
at stepdefinitions.Post_subassignment.user_recieves_the_list_of_data_which_can_be_validated(Post_subassignment.java:103)
at âœ½.: user recieves the list of data which can be validated.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/06Delete.feature:8)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="225" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to delete an assignment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.AssignmentTests.verify_delete_status(AssignmentTests.java:208)
at stepdefinitions.AssignmentPositiveScenarios_SD.Assignment_gets_deleted(AssignmentPositiveScenarios_SD.java:89)
at âœ½.Assignment gets deleted(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/06Delete.feature:19)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["DELETE by programId"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:22 EDT" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["DELETE by programName"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module Scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at stepdefinitions.Positive_program_sd.we_send_url_delete_name(Positive_program_sd.java:367)
at âœ½.we send url DELETE Name(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/06Delete.feature:43)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:22 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["POST student 400 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["validating 404 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programId validating 404 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programId validating 400 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="16" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programName validating 404 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at stepdefinitions.Negative_program_sd.we_send_put_url_by_invalid_program_name(Negative_program_sd.java:188)
at âœ½.we send put url BY invalid programName(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/07ProgramNegative.feature:18)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:23 EDT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["PUT by programName validating 400 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at stepdefinitions.Negative_program_sd.we_send_put_url_byinvalid_program_name(Negative_program_sd.java:223)
at âœ½.we send put url Byinvalid programName(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/07ProgramNegative.feature:20)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:23 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["DELETE by programId validating 404 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["DELETE by programName validating 404 status code"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["validating negative scenarios"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[parameterValue cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: parameterValue cannot be null
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at io.restassured.internal.RequestSpecificationImpl.pathParam(RequestSpecificationImpl.groovy:515)
at stepdefinitions.Negative_program_sd.we_send_url_delete_invalid_name(Negative_program_sd.java:249)
at âœ½.we send url DELETE invalid Name(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/07ProgramNegative.feature:27)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Batch Negative Module CRUD operations"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="2" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Negative Scenario for User module"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createTestCase(ExtentCucumberAdapter.java:424)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:163)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to create an assignment with missing data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:24 EDT" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to extract data by non-existing assignment id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:24 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:25 EDT" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to extract data by non-existing batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:25 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:25 EDT" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to update an assignment with missing data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:25 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:25 EDT" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User is trying to delete an assignment with non-existent id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment Module  Negative Scenarios"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:25 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:25 EDT" duration-ms="8" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[""]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Test name must not be null or empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Test name must not be null or empty
at com.aventstack.extentreports.util.Assert.notEmpty(Assert.java:12)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:96)
at com.aventstack.extentreports.ExtentTest.createNode(ExtentTest.java:153)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.createScenarioOutline(ExtentCucumberAdapter.java:374)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleScenarioOutline(ExtentCucumberAdapter.java:353)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.handleTestCaseStarted(ExtentCucumberAdapter.java:162)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$100(ExtentCucumberAdapter.java:63)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:107)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$3.receive(ExtentCucumberAdapter.java:104)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.SynchronizedEventBus.send(SynchronizedEventBus.java:47)
at io.cucumber.core.runtime.ThreadLocalRunnerSupplier$LocalEventBus.send(ThreadLocalRunnerSupplier.java:62)
at io.cucumber.core.runner.TestCase.emitTestCaseStarted(TestCase.java:206)
at io.cucumber.core.runner.TestCase.run(TestCase.java:72)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:75)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:132)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:130)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:130)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:25 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:26 EDT" duration-ms="655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get by id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:26 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:26 EDT" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get grades"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:26 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:27 EDT" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get grades by batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:27 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:27 EDT" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["get submission by userid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:27 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:27 EDT" duration-ms="276" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["get submission by batch id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [404] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [404] but found [200]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at api.test.DDtestcase.Testnegscenario(DDtestcase.java:310)
at stepdefinitions.NegativeassignSubmit.user_recieves_the_list_of_data_which_can_be_validated_for_negative_scenario(NegativeassignSubmit.java:96)
at âœ½.: user recieves the list of data which can be validated for negative scenario.(file:///C:/Users/sreej/eclipse-NumpyNinja/APITrekkers-Team13/src/test/resources/Features/11Negativepostsubassignment.feature:62)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:27 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:27 EDT" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["resubmit assignment with update request"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:27 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:28 EDT" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["update assginment"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:28 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-07-27T15:30:28 EDT" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["delete request for deleting the id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Assignment submission Module for negative scenario"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runnerfile.Testrunner@67c27493]" started-at="2023-07-27T15:30:28 EDT" name="tearDownClass" finished-at="2023-07-27T15:30:28 EDT" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runnerfile.Testrunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
